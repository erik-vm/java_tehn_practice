Teooriaküsimused

  Teooriaküsimustele saate vastata 15 minuti jooksul alates eksami algusest (12:00).
  Muudatused, mis on tehtud hiljem kui 12:15 ei lähe arvesse.

  Vastused kirjutage siia samasse faili küsimuse alla.
  Iga küsimuse vastus peab jääma alla 200 märgi.
  Iga küsimus annab kuni 7 punkti.

  1. Mis rolli täidab Spring Mvc raamistikus DispatcherServlet?

  ... vastus tuleb siia ...

  2. Mis kasu on Spring Core raamistikust?

  ... vastus tuleb siia ...

  3. Mis on Jdbc eesmärk?

  ... vastus tuleb siia ...

  4. Sql lausete parameetrite määramine stringe kokku liites võib võimaldada
     Sql Injection rünnakut. Nimetage mõni teine probleem, miks see lähenemine hea pole.

  ... vastus tuleb siia ...

Ülesanne 1 (24 punkti)

  Paketis "servlet" on üks servlet ja kolm abiklassi. Muutke neid klasse nii,
  et POST päring aadressile /calculate arvutaks sisendi põhjal väärtuse.

      Sisend: [{"key1": 3}, {"key2": "a"}, {"key3": 5},
               {"key2": "b"}, {"key1": 1}]
      Väljund: {"sum": 9, "letters": "ab"}.

  Ehk rakendus tagastab võtmete key1, key2 ja key3 väärtused kokku liidetuna.
  Kui väärtus on number, siis toimub aritmeetiline liitmine (1 + 2 = 3),
  kui väärtus on sõne, siis toimub sõnede liitmine ("a" + "b" = "ab").

  Sisendi ja väljundi töötluseks peate kasutama mingit teeki (nt. ObjectMapper).

  Kasuks võib tulla konstruktsioon
  Person p = new ObjectMapper().readValue(inputJson, new TypeReference<>() {});

  NB! Nõuded, mille eiramisel lahendust ei arvestatata.
     - Tekstist käsitsi töötlemine (split, replace, match jne) ei ole lubatud.
     - Programmis ei tohi olla ühtegi cast-i.
     - Uusi klasse luua ei või. Klasse A, B ja C võite kasutatda, milleks iganes.
     - Rakendus peab läbima testid klassist MvcTest.

Ülesanne 2 (15 punkti)

  Paketis "mvc" on Spring Mvc kontroller, mis peaks vastama aadressile "/api/echo".

  Tehke nii, et kui sellele saata POST päring mistahes sisuga, siis vastab see
  täpselt sama sisuga, mis sisendiks anti.

  Kõik rakenduse töötamiseks vajalik peab mahtuma Ctrl klassi.

  NB! Nõuded, mille eiramisel lahendust ei arvestatata.
     - Muuta võite vaid klassi Ctrl.
     - Rakendus peab töötama ka serveris, mitte ainult läbi testi.
     - Rakenduse aadress serveris peab olema "/api/echo".
     - Lahendus peab läbima testid klassist MvcTest.

Ülesanne 3 (8 punkti)

  Kirjutage lõpuni paketis "security" olev Spring Security rakendus.

  Klassis SecurityConfig on määratud, mis õigustega (ROLE_USER, ROLE_ADMIN) määratud
  aadressidele ligi saab.

  Kirjutage filtrite kood nii, et kasutaja alice näeks aadresse /security/admin.html
  ja /security/user.html ja bob näeks aadressi /security/user.html. Kui kasutajal
  õigust pole, siis tagastatakse talle Http staatus kood 444 ja sisu "Error!".

  Kasutajal alice peavad olema rollid ROLE_USER, ROLE_ADMIN ja kasutajal bob roll ROLE_USER;

  See, mis kasutajaga on tegu, on öeldud päringu GET prameetriga.
     /security/admin.html?username=alice
     /security/user.html?username=bob

  NB! Nõuded, mille eiramisel lahendust ei arvestatata.
    - Muuta võite klasse SecurityConfig, AuthorizationFilter ja Handler.
    - Rakendus peab läbima testid klassist SecurityTest.
